/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        if(postorder.length==0)
            return null;
        int a=postorder[postorder.length-1];//后续的最后一个结点是根节点
        int b;
        for(b=0;b<inorder.length;b++){
            if(inorder[b]==a)
                break;//找到根节点在中序的下标
        }
        TreeNode root=new TreeNode(a);
        int []m1=Arrays.copyOfRange(inorder,0,b);//左子树的中序序列
        int[]m2=Arrays.copyOfRange(postorder,0,b);//左子树的后序序列
        root.left=buildTree(m1,m2);
        int[]n1=Arrays.copyOfRange(inorder,b+1,inorder.length);
        int[]n2=Arrays.copyOfRange(postorder,b,postorder.length-1);
        root.right=buildTree(n1,n2);
        return root;
    }
}
